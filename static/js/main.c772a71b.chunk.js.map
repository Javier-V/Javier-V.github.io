{"version":3,"sources":["feed-calendar.js","index.js"],"names":["CustomElements","state","lastBreak","Date","feedLength","breakLength","handleWeekChange","date","_this","setState","selectedDate","startOf","renderWrappedWeekDay","dayInCurrentMonth","_classNames","_classNames2","classes","props","start","toDate","isBreakDay","islastBreakDay","isSame","wrapperClassName","classNames","Object","defineProperty","breakDayHighlight","dayClassName","day","nonCurrentMonthDay","highlightNonCurrentMonthDay","react_default","a","createElement","className","index_es","format","handleChange","name","event","target","value","checkingDate","feedingDays","arguments","length","undefined","breakDays","checkingDateMoment","moment","lastBreakMoment","numberOfDaysUntilCheckingDate","diff","modulus","this","style","display","borderColor","borderStyle","borderWidth","borderRadius","flexDirection","padding","width","material_ui_pickers_esm","label","onChange","renderDay","height","marginRight","paddingRight","id","select","margin","PureComponent","withStyles","theme","fontSize","typography","caption","color","palette","text","disabled","background","primary","main","common","white","pickerContainer","App","utils","MomentUtils","feed_calendar","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"6TAQMA,6MAMFC,MAAQ,CACJC,UAAW,IAAIC,KACfC,WAAY,EACZC,YAAa,KAYjBC,iBAAmB,SAAAC,GACfC,EAAKC,SAAS,CAAEC,aAAcH,EAAKI,QAAQ,gBAG/CC,qBAAuB,SAACL,EAAMG,EAAcG,GAAsB,IAAAC,EAAAC,EACtDC,EAAYR,EAAKS,MAAjBD,QAEFE,EAAQR,EAAaS,SACrBC,EAAaZ,EAAKY,WAAWb,EAAMW,EAAOV,EAAKP,MAAMG,WAAYI,EAAKP,MAAMI,aAC5EgB,EAAiBd,EAAKe,OAAOJ,EAAO,OAEpCK,EAAmBC,KAAUV,EAAA,GAAAW,OAAAC,EAAA,EAAAD,CAAAX,EAC9BE,EAAQW,kBAAoBP,GADEK,OAAAC,EAAA,EAAAD,CAAAX,EAE9BE,EAAQd,UAAYmB,GAFUP,IAK7Bc,EAAeJ,IAAWR,EAAQa,KAATd,EAAA,GAAAU,OAAAC,EAAA,EAAAD,CAAAV,EAC1BC,EAAQc,oBAAsBjB,GADJY,OAAAC,EAAA,EAAAD,CAAAV,EAE1BC,EAAQe,6BAA+BlB,GAAqBO,GAFlCL,IAK/B,OACIiB,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,GACZS,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYD,UAAWP,GACnBI,EAAAC,EAAAC,cAAA,gBAAQ3B,EAAK8B,OAAO,KAApB,UAMhBC,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACnBhC,EAAKC,SAALgB,OAAAC,EAAA,EAAAD,CAAA,GAAiBc,EAAOC,EAAMC,OAAOC,oFAxC9BC,EAAczC,GAA2C,IAAhC0C,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,EAAGG,EAAeH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACzDI,EAAqBC,IAAOP,GAAchC,QAAQ,OAClDwC,EAAkBD,IAAOhD,GAAWS,QAAQ,OAC5CyC,EAAgCH,EAAmBI,KAAKF,EAAiB,QACzEG,EAAUF,GAAiCR,EAAcI,GAE7D,OAAOI,EAAgC,GAAKE,GAAWN,EAAY,GAAKM,GAAW,mCAqC9E,IACGtC,EAAYuC,KAAKtC,MAAjBD,QACWN,EAAkB6C,KAAKtD,MAAlCC,UAER,OACI8B,EAAAC,EAAAC,cAAA,OAAKsB,MAAO,CACRC,QAAS,OAAQC,YAAa,UAAWC,YAAa,QAASC,YAAa,MAAOC,aAAc,MACjGC,cAAe,SAAUC,QAAS,OAAQC,MAAO,SAClD7B,UAAU,UAETH,EAAAC,EAAAC,cAAA,OAAKsB,MAAO,CAAEO,QAAS,SACnB/B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,MAAM,cAAcxB,MAAOhC,EAAcyD,SAAUZ,KAAKjD,iBAAkB8D,UAAWb,KAAK3C,uBACtGoB,EAAAC,EAAAC,cAAA,QAAMC,UAAWnB,EAAQd,UAAWsD,MAAO,CAAEa,OAAQ,OAAQL,MAAO,OAAQM,YAAa,QAAzF,cACAtC,EAAAC,EAAAC,cAAA,QAAMC,UAAWnB,EAAQW,kBAAmB6B,MAAO,CAAEa,OAAQ,OAAQL,MAAO,SAA5E,cAEJhC,EAAAC,EAAAC,cAAA,OAAKsB,MAAO,CAAEC,QAAS,OAAQM,QAAS,SACpC/B,EAAAC,EAAAC,cAAA,OAAKsB,MAAO,CAAEe,aAAc,SACxBvC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIoC,GAAG,qBACHC,QAAM,EACNP,MAAM,wBACNxB,MAAOa,KAAKtD,MAAMG,WAClB+D,SAAUZ,KAAKjB,aAAa,cAC5BoC,OAAO,SACPlB,MAAO,CAAEQ,MAAO,UAPpB,IASKhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUM,MAAO,GAAjB,KATL,IAUIV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUM,MAAO,GAAjB,KAVJ,IAWIV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUM,MAAO,GAAjB,KAXJ,MAcJV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIoC,GAAG,sBACHC,QAAM,EACNP,MAAM,sBACNxB,MAAOa,KAAKtD,MAAMI,YAClB8D,SAAUZ,KAAKjB,aAAa,eAC5BoC,OAAO,SACPlB,MAAO,CAAEQ,MAAO,UAPpB,IASKhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUM,MAAO,GAAjB,KATL,IAUIV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUM,MAAO,GAAjB,KAVJ,IAWIV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUM,MAAO,GAAjB,KAXJ,eAvFKiC,iBAyIdC,uBA5BA,SAAAC,GAAK,MAAK,CACrBhD,IAAK,CACDmC,MAAO,GACPK,OAAQ,GACRS,SAAUD,EAAME,WAAWC,QAAQF,SACnCJ,OAAQ,QACRO,MAAO,WAEXnD,mBAAoB,CAChBmD,MAAOJ,EAAMK,QAAQC,KAAKC,UAE9BrD,4BAA6B,CACzBkD,MAAO,WAEXtD,kBAAmB,CACf0D,WAAYR,EAAMK,QAAQI,QAAQC,KAClCN,MAAOJ,EAAMK,QAAQM,OAAOC,OAEhCvF,UAAW,CACPmF,WAAY,QACZJ,MAAOJ,EAAMK,QAAQM,OAAOC,OAEhCC,gBAAiB,CACbjC,QAAS,OAAQC,YAAa,UAAWC,YAAa,QAASC,YAAa,MAAOC,aAAc,MACjGC,cAAe,SAAUC,QAAS,OAAQC,MAAO,WAI1CY,CAAmB5E,GCzI5B2F,mLAEE,OACI3D,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAyB2B,MAAOC,IAAa3C,OAAQA,KACjDlB,EAAAC,EAAAC,cAAC4D,EAAD,cAJEC,IAAMC,WAUxBC,IAASC,OACLlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c772a71b.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { DatePicker } from \"material-ui-pickers\";\r\nimport { IconButton, withStyles, TextField, MenuItem } from \"@material-ui/core\";\r\nimport moment from 'moment';\r\n\r\nclass CustomElements extends PureComponent {\r\n    // https://material-ui-pickers.firebaseapp.com/api/datepicker\r\n    static propTypes = {\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        lastBreak: new Date(),\r\n        feedLength: 3,\r\n        breakLength: 1\r\n    };\r\n\r\n    isBreakDay(checkingDate, lastBreak, feedingDays = 3, breakDays = 1) {\r\n        let checkingDateMoment = moment(checkingDate).startOf('day');\r\n        let lastBreakMoment = moment(lastBreak).startOf('day');\r\n        let numberOfDaysUntilCheckingDate = checkingDateMoment.diff(lastBreakMoment, 'days');\r\n        let modulus = numberOfDaysUntilCheckingDate % (feedingDays + breakDays);\r\n\r\n        return numberOfDaysUntilCheckingDate > 0 && modulus <= breakDays - 1 && modulus >= 0;\r\n    }\r\n\r\n    handleWeekChange = date => {\r\n        this.setState({ selectedDate: date.startOf(\"isoWeek\") });\r\n    };\r\n\r\n    renderWrappedWeekDay = (date, selectedDate, dayInCurrentMonth) => {\r\n        const { classes } = this.props;\r\n\r\n        const start = selectedDate.toDate();\r\n        const isBreakDay = this.isBreakDay(date, start, this.state.feedLength, this.state.breakLength);\r\n        const islastBreakDay = date.isSame(start, \"day\");\r\n\r\n        const wrapperClassName = classNames({\r\n            [classes.breakDayHighlight]: isBreakDay,\r\n            [classes.lastBreak]: islastBreakDay,\r\n        });\r\n\r\n        const dayClassName = classNames(classes.day, {\r\n            [classes.nonCurrentMonthDay]: !dayInCurrentMonth,\r\n            [classes.highlightNonCurrentMonthDay]: !dayInCurrentMonth && isBreakDay\r\n        });\r\n\r\n        return (\r\n            <div className={wrapperClassName}>\r\n                <IconButton className={dayClassName}>\r\n                    <span> {date.format(\"D\")} </span>\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { lastBreak: selectedDate, } = this.state;\r\n\r\n        return (\r\n            <div style={{\r\n                display: 'flex', borderColor: '#D5D5D5', borderStyle: 'solid', borderWidth: '1px', borderRadius: '5px',\r\n                flexDirection: 'column', padding: '10px', width: '400px'\r\n            }} className=\"picker\">\r\n\r\n                <div style={{ padding: '10px' }}>\r\n                    <DatePicker label=\"Week picker\" value={selectedDate} onChange={this.handleWeekChange} renderDay={this.renderWrappedWeekDay} />\r\n                    <span className={classes.lastBreak} style={{ height: '30px', width: '30px', marginRight: '5px' }}>Last break</span>\r\n                    <span className={classes.breakDayHighlight} style={{ height: '30px', width: '30px' }}>Break day</span>\r\n                </div>\r\n                <div style={{ display: 'flex', padding: '10px' }}>\r\n                    <div style={{ paddingRight: '10px' }}>\r\n                        <TextField\r\n                            id=\"select-feed-length\"\r\n                            select\r\n                            label=\"Select feeding length\"\r\n                            value={this.state.feedLength}\r\n                            onChange={this.handleChange('feedLength')}\r\n                            margin=\"normal\"\r\n                            style={{ width: '150px' }}\r\n                        >\r\n                            [<MenuItem value={1}>1</MenuItem>,\r\n                            <MenuItem value={2}>2</MenuItem>,\r\n                            <MenuItem value={3}>3</MenuItem>]\r\n                        </TextField>\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            id=\"select-break-length\"\r\n                            select\r\n                            label=\"Select break length\"\r\n                            value={this.state.breakLength}\r\n                            onChange={this.handleChange('breakLength')}\r\n                            margin=\"normal\"\r\n                            style={{ width: '150px' }}\r\n                        >\r\n                            [<MenuItem value={1}>1</MenuItem>,\r\n                            <MenuItem value={2}>2</MenuItem>,\r\n                            <MenuItem value={3}>3</MenuItem>]\r\n                        </TextField>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    day: {\r\n        width: 36,\r\n        height: 36,\r\n        fontSize: theme.typography.caption.fontSize,\r\n        margin: \"0 2px\",\r\n        color: \"inherit\"\r\n    },\r\n    nonCurrentMonthDay: {\r\n        color: theme.palette.text.disabled\r\n    },\r\n    highlightNonCurrentMonthDay: {\r\n        color: \"#676767\"\r\n    },\r\n    breakDayHighlight: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n    },\r\n    lastBreak: {\r\n        background: 'green',\r\n        color: theme.palette.common.white,\r\n    },\r\n    pickerContainer: {\r\n        display: 'flex', borderColor: '#D5D5D5', borderStyle: 'solid', borderWidth: '1px', borderRadius: '5px',\r\n        flexDirection: 'column', padding: '10px', width: '400px'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(CustomElements);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport moment from 'moment';\r\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport CustomElements from \"./feed-calendar\";\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <MuiPickersUtilsProvider utils={MomentUtils} moment={moment}>\r\n                <CustomElements />\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);"],"sourceRoot":""}